== Tracking down all commits from all branches ==

To understand which commit belongs to which release

Steps:
# start from a new commit id of a release (R1)
# store it in git_commit_release (newly created table)
# check if it has a parent
# -- if has parent then
# -- -- for every parent
# -- -- -- check if this parent commit has a tag
# -- -- -- if has tag
# -- -- -- -- repeat step 1
# -- -- -- else check if the parent is already stored
# -- -- -- -- if parent already not stored
# -- -- -- -- -- store parent
# -- -- -- -- -- commit id = parent id
# -- -- -- -- -- repeat step 3
# -- -- -- -- else if already stored
# -- -- -- -- -- compare release versions
# -- -- -- -- -- if release version is smaller
# -- -- -- -- -- -- then update release
# -- -- -- -- -- end if
# -- -- -- -- end if
# -- -- -- end if
# -- -- end for
# -- else if no parent repeat 1
# -- end if
# end

Thus we get all the commits and their associated releases. It looks like very few commits are contributed for each stable release, hundreds of commits for release candidates and there are huge number of commits for the merge windows.
